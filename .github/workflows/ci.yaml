name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod
          cache: true
          cache-dependency-path: |
            **/go.sum
            **/go.mod
            **/bin/**

      - name: Check formatting
        run: make check-fmt

      - name: Run go vet
        run: make vet

      - name: Run golangci-lint
        run: make lint

      - name: Run tests
        run: make test

      - name: Build
        run: make docker-build

      - name: Debug Docker Hub credentials
        if: github.event_name != 'pull_request'
        run: |
          echo "Checking if Docker Hub credentials are set..."
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "DOCKERHUB_USERNAME is set"
          else
            echo "DOCKERHUB_USERNAME is not set"
          fi
          if [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "DOCKERHUB_TOKEN is set"
          else
            echo "DOCKERHUB_TOKEN is not set"
          fi

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: Push image
        if: github.event_name != 'pull_request'
        run: make docker-push

      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version

      - name: Create kind cluster
        run: kind create cluster

      - name: Run E2E tests
        run: |
          go mod tidy
          make test-e2e 